//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Simple_randomizer_SoC.Language {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ru_local {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ru_local() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Simple_randomizer_SoC.Language.ru_local", typeof(ru_local).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка применения дополнительных параметров.
        /// </summary>
        internal static string advancedParamsError {
            get {
                return ResourceManager.GetString("advancedParamsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Дополнительно.
        /// </summary>
        internal static string advancedTab {
            get {
                return ResourceManager.GetString("advancedTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Программа теоретически может быть использована с некоторыми небольшими модами (Если мод не нарушает логику оригинальных игровых файлов).
        ///
        ///Для работы с модом нужно в папке ./rndata/gamedata/config в директориях gameplay, misc, weathers и weapons заменить нужные файлы на модифицированные (при необходимости сделайте резервную копию оригинальных файлов). После чего следует поправить списки в соответствии с содержимым мода.
        ///
        ///Если в модификации есть дополнительные модели и озвучка НПС, нужно просто прописать  [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string advancedText {
            get {
                return ResourceManager.GetString("advancedText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Патроны и кол-во их в пачке.
        /// </summary>
        internal static string ammoListTitle {
            get {
                return ResourceManager.GetString("ammoListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Артефакты.
        /// </summary>
        internal static string artefacts {
            get {
                return ResourceManager.GetString("artefacts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь для сохранения артефактов не указан. Требуется вызов &quot;updateData&quot;.
        /// </summary>
        internal static string artefactsDataError {
            get {
                return ResourceManager.GetString("artefactsDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации артефактов. Операция прервана.
        /// </summary>
        internal static string artefactsError {
            get {
                return ResourceManager.GetString("artefactsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отключить тревогу в Баре, когда игрок кого-то убивает.
        /// </summary>
        internal static string barAlarm {
            get {
                return ResourceManager.GetString("barAlarm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Тайники.
        /// </summary>
        internal static string caches {
            get {
                return ResourceManager.GetString("caches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данные для генерации тайников не были получены. Требуется вызов &quot;updateData&quot;.
        /// </summary>
        internal static string cachesDataError {
            get {
                return ResourceManager.GetString("cachesDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации тайников. Операция прервана.
        /// </summary>
        internal static string cachesError {
            get {
                return ResourceManager.GetString("cachesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отмена.
        /// </summary>
        internal static string cancel {
            get {
                return ResourceManager.GetString("cancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Изменять группировку НПС.
        /// </summary>
        internal static string changeCommunity {
            get {
                return ResourceManager.GetString("changeCommunity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Группировки.
        /// </summary>
        internal static string communityListTitle {
            get {
                return ResourceManager.GetString("communityListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Расходники.
        /// </summary>
        internal static string consumableListTitle {
            get {
                return ResourceManager.GetString("consumableListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Расходники.
        /// </summary>
        internal static string consumables {
            get {
                return ResourceManager.GetString("consumables", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данные для генерации расходников не были получены. Операция прервана.
        /// </summary>
        internal static string consumablesDataError {
            get {
                return ResourceManager.GetString("consumablesDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации расходников. Операция прервана.
        /// </summary>
        internal static string consumablesError {
            get {
                return ResourceManager.GetString("consumablesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка копирования.
        /// </summary>
        internal static string copyError {
            get {
                return ResourceManager.GetString("copyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вещи убитых.
        /// </summary>
        internal static string deathItems {
            get {
                return ResourceManager.GetString("deathItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь для сохранения файлов вещей убитых не был получен. Требуется вызов &quot;updateData&quot;.
        /// </summary>
        internal static string deathItemsDataError {
            get {
                return ResourceManager.GetString("deathItemsDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации вещей убитых. Операция прервана.
        /// </summary>
        internal static string deathItemsError {
            get {
                return ResourceManager.GetString("deathItemsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Списки по умолчанию.
        /// </summary>
        internal static string defaultLists {
            get {
                return ResourceManager.GetString("defaultLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Диалоги.
        /// </summary>
        internal static string dialogs {
            get {
                return ResourceManager.GetString("dialogs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данные для генерации диалогов не загружены. Операция прервана.
        /// </summary>
        internal static string dialogsDataError {
            get {
                return ResourceManager.GetString("dialogsDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Изменение диалогов полностью ломает сюжет и большинство квестов, потому рекомендуется включить разблокировку двери у Сидоровича со старта игры и дать главному герою нож (вкладка &quot;Дополнительно&quot;).
        ///
        ///По умолчанию в списках сломанных событий/действий указаны события/действия, которые приводят к вылету игры или зависанию интерфейса. Однако в них можно записать любые другие события/действия, которые вы хотите исключить из генерации.
        ///
        ///XML тэги для событий - has_info, dont_has_info, give_info.
        ///XML тэг для дейс [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string dialogsDescription {
            get {
                return ResourceManager.GetString("dialogsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации диалогов. Операция прервана.
        /// </summary>
        internal static string dialogsError {
            get {
                return ResourceManager.GetString("dialogsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не рекомендуется включать, если у вас когда-либо были эпилептические приступы.
        /// </summary>
        internal static string epilepsy {
            get {
                return ResourceManager.GetString("epilepsy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка.
        /// </summary>
        internal static string error {
            get {
                return ResourceManager.GetString("error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Исключения.
        /// </summary>
        internal static string exceptionListTitle {
            get {
                return ResourceManager.GetString("exceptionListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Завершение....
        /// </summary>
        internal static string exiting {
            get {
                return ResourceManager.GetString("exiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Копирование файлов....
        /// </summary>
        internal static string fileCopying {
            get {
                return ResourceManager.GetString("fileCopying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Отключить враждебность базы Свободы при наличии на ней НПС, враждебных к ГГ.
        /// </summary>
        internal static string freedomAgression {
            get {
                return ResourceManager.GetString("freedomAgression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Охлаждающий трахание перевод.
        /// </summary>
        internal static string funnyTranslate {
            get {
                return ResourceManager.GetString("funnyTranslate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Звуки.
        /// </summary>
        internal static string gameSounds {
            get {
                return ResourceManager.GetString("gameSounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сгенерировать.
        /// </summary>
        internal static string generate {
            get {
                return ResourceManager.GetString("generate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Использовать только GENERATE_NAME.
        /// </summary>
        internal static string generateNameOnlyCheckBox {
            get {
                return ResourceManager.GetString("generateNameOnlyCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Фикс (возможных, но не всех) вылетов при долгой игре на поздних локациях.
        /// </summary>
        internal static string gScriptFix {
            get {
                return ResourceManager.GetString("gScriptFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Справка.
        /// </summary>
        internal static string guideFormName {
            get {
                return ResourceManager.GetString("guideFormName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Миниатюры.
        /// </summary>
        internal static string iconListTitle {
            get {
                return ResourceManager.GetString("iconListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сломанные действия.
        /// </summary>
        internal static string incorrectActions {
            get {
                return ResourceManager.GetString("incorrectActions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сломанные события.
        /// </summary>
        internal static string incorrectInfos {
            get {
                return ResourceManager.GetString("incorrectInfos", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Внимание.
        /// </summary>
        internal static string infoFornName {
            get {
                return ResourceManager.GetString("infoFornName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Все списки на данной вкладке используются для добавления предметов в тайники и для редактирования ассортимента торговцев.
        ///
        ///Генерация статов брони и артефактов происходит в файлах outfit.ltx и artefacts.ltx соответственно
        ///(директория ./rndata/gamedata/config/misc) и не зависит от данных списков
        ///
        ///Правила генерации предметов в тайниках.
        ///Количество предметов от 1 до 7 (Каждый предмет выбирается случайно и может повторяться)
        ///Вероятность генерации предмета по типам:
        ///Броня - 5%, 1 шт.
        ///Оружие - 10%, 1 шт.        /// [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string ItemsGuide {
            get {
                return ResourceManager.GetString("ItemsGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Предметы.
        /// </summary>
        internal static string ItemsTab {
            get {
                return ResourceManager.GetString("ItemsTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Дать ГГ нож в начале игры.
        /// </summary>
        internal static string knifeAtStart {
            get {
                return ResourceManager.GetString("knifeAtStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось загрузить следующие файлы:.
        /// </summary>
        internal static string loadError {
            get {
                return ResourceManager.GetString("loadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Загрузить списки.
        /// </summary>
        internal static string loadLists {
            get {
                return ResourceManager.GetString("loadLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Простой рандомайзер для Тень Чернобыля.
        /// </summary>
        internal static string mainFormName {
            get {
                return ResourceManager.GetString("mainFormName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Максимальное количество потоков для обработки.
        /// </summary>
        internal static string maxThreads {
            get {
                return ResourceManager.GetString("maxThreads", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Модели.
        /// </summary>
        internal static string modelListTitle {
            get {
                return ResourceManager.GetString("modelListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Расширить присоединение НПС к лагерям (ломает некоторые скрипты. Может приводить к вылетам при долгой игре, особенно на версии 1.0006).
        /// </summary>
        internal static string moreGulag {
            get {
                return ResourceManager.GetString("moreGulag", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Увеличить частоту респавна НПС (может приводить к вылетам при долгой игре).
        /// </summary>
        internal static string moreRespawn {
            get {
                return ResourceManager.GetString("moreRespawn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Имена.
        /// </summary>
        internal static string nameListTitle {
            get {
                return ResourceManager.GetString("nameListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данные для генерации НПС не были получены. Требуется вызов &quot;updateData&quot;.
        /// </summary>
        internal static string npcDataError {
            get {
                return ResourceManager.GetString("npcDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации НПС. Операция прервана.
        /// </summary>
        internal static string npcError {
            get {
                return ResourceManager.GetString("npcError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Манипуляции с НПС (особенно при смене группировок) могут увеличить вероятность вылета
        ///Также при включеной генерации НПС не рекомендуется заходить во вкладку рейтинга в ПДА
        ///
        ///Список моделей:
        ///Используется для выдачи случайной модели НПС. Пути к моделям прописываются из папки gamedata/meshes.
        ///Сами модели считывать и редактировать не надо. Для изменения доступных моделей НПС достаточно
        ///изменить список без копирования самих файлов моделей куда-либо
        ///
        ///Список озвучки:
        ///Используется для выдачи случайной озвуч [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string npcGuide {
            get {
                return ResourceManager.GetString("npcGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Правила для генерации НПС не были получены. Требуется вызов &quot;updateRules&quot;.
        /// </summary>
        internal static string npcRulesError {
            get {
                return ResourceManager.GetString("npcRulesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на НПС.
        /// </summary>
        internal static string npcTab {
            get {
                return ResourceManager.GetString("npcTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Если верить парням с Metacognix, то &quot;в игровом движке версии 1.0006 внесены изменения в код, которые приводят к сбоям, когда оружие, боеприпасы или другие предметы уничтожаются во время их использования...&quot;
        ///Также ошибка &quot;может возникать в модах, которые изменяют боеприпасы и/или оружие&quot;
        ///
        ///https://www.metacognix.com/stlkrsoc/CrashesStillInTheGame.html
        ///
        ///Сама ошибка выглядит так:
        ///
        ///sv reject.id_parent[21043][mil_freedom_respawn_3: mil_freedom_respawn_321043] id_entity[36660][bolt: bolt][137703]
        ///sv reject [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string onePointFourAdvertise {
            get {
                return ResourceManager.GetString("onePointFourAdvertise", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Версия игры 1.0004 работает с этим рандомайзером стабильнее, чем 1.0006. Но почему?.
        /// </summary>
        internal static string onePointFourLink {
            get {
                return ResourceManager.GetString("onePointFourLink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Открыть.
        /// </summary>
        internal static string open {
            get {
                return ResourceManager.GetString("open", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Другое....
        /// </summary>
        internal static string other {
            get {
                return ResourceManager.GetString("other", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Прочее.
        /// </summary>
        internal static string otherListTitle {
            get {
                return ResourceManager.GetString("otherListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Броня.
        /// </summary>
        internal static string outfits {
            get {
                return ResourceManager.GetString("outfits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь для сохранения брони не указан. Требуется вызов &quot;updateData&quot;.
        /// </summary>
        internal static string outfitsDataError {
            get {
                return ResourceManager.GetString("outfitsDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации брони. Операция прервана.
        /// </summary>
        internal static string outfitsError {
            get {
                return ResourceManager.GetString("outfitsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Следующие файлы будут перезаписаны:.
        /// </summary>
        internal static string overwritingFiles {
            get {
                return ResourceManager.GetString("overwritingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обработка.
        /// </summary>
        internal static string processing {
            get {
                return ResourceManager.GetString("processing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вероятность дождя для каждого класса погоды.
        /// </summary>
        internal static string rainProbability {
            get {
                return ResourceManager.GetString("rainProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ранг.
        /// </summary>
        internal static string rank {
            get {
                return ResourceManager.GetString("rank", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка чтения или обработки.
        /// </summary>
        internal static string readHandleError {
            get {
                return ResourceManager.GetString("readHandleError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (Рекомендуется).
        /// </summary>
        internal static string recommended {
            get {
                return ResourceManager.GetString("recommended", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Звуки перезарядки.
        /// </summary>
        internal static string reloadSoundListTitle {
            get {
                return ResourceManager.GetString("reloadSoundListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Репутация.
        /// </summary>
        internal static string reputation {
            get {
                return ResourceManager.GetString("reputation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранено в папку.
        /// </summary>
        internal static string savedIn {
            get {
                return ResourceManager.GetString("savedIn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не удалось сохранить следующие файлы:.
        /// </summary>
        internal static string saveError {
            get {
                return ResourceManager.GetString("saveError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранение.
        /// </summary>
        internal static string saveFormName {
            get {
                return ResourceManager.GetString("saveFormName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сохранить списки.
        /// </summary>
        internal static string saveLists {
            get {
                return ResourceManager.GetString("saveLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Сид генерации.
        /// </summary>
        internal static string seed {
            get {
                return ResourceManager.GetString("seed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбрать все.
        /// </summary>
        internal static string selectAll {
            get {
                return ResourceManager.GetString("selectAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Звуки стрельбы.
        /// </summary>
        internal static string shootSoundListTitle {
            get {
                return ResourceManager.GetString("shootSoundListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Дополнительно перемешать весь текст.
        /// </summary>
        internal static string shuffleText {
            get {
                return ResourceManager.GetString("shuffleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Небо.
        /// </summary>
        internal static string skyboxListTitle {
            get {
                return ResourceManager.GetString("skyboxListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Озвучка.
        /// </summary>
        internal static string soundListTitle {
            get {
                return ResourceManager.GetString("soundListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка обработки звуков. Операция прервана.
        /// </summary>
        internal static string soundsError {
            get {
                return ResourceManager.GetString("soundsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь к папке sounds.
        /// </summary>
        internal static string soundsPath {
            get {
                return ResourceManager.GetString("soundsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обработка звука....
        /// </summary>
        internal static string soundsProcessing {
            get {
                return ResourceManager.GetString("soundsProcessing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Шаг округления длительности звуковых файлов, сек (использование больших значений на свой страх и риск).
        /// </summary>
        internal static string soundsRoundStep {
            get {
                return ResourceManager.GetString("soundsRoundStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Для перемешивания текстур и звуков нужно иметь распакованные игровые файлы gamedata.db* с текстурами и звуками. Пути к папкам с данными нужно указать в соответствующих полях.
        ///
        ///Процесс перемешивания может занять много времени, особенно если игровые файлы лежат на жестком диске, а не на твердотельном накопителе. Также для копирования перемешанных текстур/звуков потребуется около 2ГБ места на диске (для оригинальной игры).
        ///
        ///Максимальное количество потоков для обработки устанавливает количество одновременно [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string soundTexturesDescription {
            get {
                return ResourceManager.GetString("soundTexturesDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Заменять звуки шагов и дождя (не рекомендуется).
        /// </summary>
        internal static string stepRainSounds {
            get {
                return ResourceManager.GetString("stepRainSounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка чтения файлов с игровым текстом.
        /// </summary>
        internal static string textDataReadError {
            get {
                return ResourceManager.GetString("textDataReadError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Обработка текстур....
        /// </summary>
        internal static string textureProcessing {
            get {
                return ResourceManager.GetString("textureProcessing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Текстуры.
        /// </summary>
        internal static string textures {
            get {
                return ResourceManager.GetString("textures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка обработки текстур. Операция прервана.
        /// </summary>
        internal static string texturesError {
            get {
                return ResourceManager.GetString("texturesError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Путь к папке textures.
        /// </summary>
        internal static string texturesPath {
            get {
                return ResourceManager.GetString("texturesPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Эффекты грозы.
        /// </summary>
        internal static string thunderListTitle {
            get {
                return ResourceManager.GetString("thunderListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вероятность грозы для каждого класса погоды.
        /// </summary>
        internal static string thunderProbability {
            get {
                return ResourceManager.GetString("thunderProbability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Разблокировать дверь у Сидоровича.
        /// </summary>
        internal static string traderDoor {
            get {
                return ResourceManager.GetString("traderDoor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Вещи торговцев.
        /// </summary>
        internal static string traderItems {
            get {
                return ResourceManager.GetString("traderItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данные для генерации вещей торговцев не были получены. Требуется вызов &quot;updateData&quot;.
        /// </summary>
        internal static string tradersDataError {
            get {
                return ResourceManager.GetString("tradersDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации вещей торговцев. Операция прервана.
        /// </summary>
        internal static string tradersError {
            get {
                return ResourceManager.GetString("tradersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В двух словах: я не знаю, но....
        /// </summary>
        internal static string twoWords {
            get {
                return ResourceManager.GetString("twoWords", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Заменять элементы интерфейса.
        /// </summary>
        internal static string uiReplacement {
            get {
                return ResourceManager.GetString("uiReplacement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Возможность достать оружие в баре, в бункере ученых и у Сидоровича.
        /// </summary>
        internal static string weaponEverywhere {
            get {
                return ResourceManager.GetString("weaponEverywhere", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Список оружия и используемых патронов:
        ///
        ///Используется для добавления оружия в тайники, выдаче оружия НПС и для
        ///генерации ассортимента торговцев. Тип патронов необходим для добавления
        ///к НПС, чтоб челы имели боеприпас для перезарядки.
        ///
        ///Список патронов и количества в одной пачке:
        ///Используется для добавления патронов в тайники. Количество патронов в пачке необходимо
        ///для устранения дисбаланса между генераций разных типов патронов
        ///Так, если генерировать чисто в диапазоне от 1 до 100, можно получить 80 рак [остаток строки не уместился]&quot;;.
        /// </summary>
        internal static string weaponGuide {
            get {
                return ResourceManager.GetString("weaponGuide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Оружие и используемые им патроны.
        /// </summary>
        internal static string weaponListTitle {
            get {
                return ResourceManager.GetString("weaponListTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данные для генерации оружия не были получены. Требуется вызов &quot;updateData&quot;.
        /// </summary>
        internal static string weaponsDataError {
            get {
                return ResourceManager.GetString("weaponsDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации оружия. Операция прервана.
        /// </summary>
        internal static string weaponsError {
            get {
                return ResourceManager.GetString("weaponsError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Оружие.
        /// </summary>
        internal static string weaponsTab {
            get {
                return ResourceManager.GetString("weaponsTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данные для генерации погоды не были получены. Операция прервана.
        /// </summary>
        internal static string weatherDataError {
            get {
                return ResourceManager.GetString("weatherDataError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка генерации погоды. Операция прервана.
        /// </summary>
        internal static string weatherError {
            get {
                return ResourceManager.GetString("weatherError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Изменение погоды в основном затрагивает цвет окружения, потому может быть не очень приятным.
        ///Зато игра будет хорошо дополнять RGB геймерские клавиатуру и мышь.
        /// </summary>
        internal static string weatherHelp {
            get {
                return ResourceManager.GetString("weatherHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Погода.
        /// </summary>
        internal static string weatherTab {
            get {
                return ResourceManager.GetString("weatherTab", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Что генерировать:.
        /// </summary>
        internal static string whatGenerate {
            get {
                return ResourceManager.GetString("whatGenerate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Ошибка записи или обработки.
        /// </summary>
        internal static string writeHandleError {
            get {
                return ResourceManager.GetString("writeHandleError", resourceCulture);
            }
        }
    }
}
